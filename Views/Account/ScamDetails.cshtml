@model ScamSentinel.Models.Scam.ScamDetailsViewModel
@{
    ViewData["Title"] = "Scam Details";
}

<link rel="stylesheet" href="/css/ScamDetails.css" asp-append-version="true" />

<div class="bg-gradient-bg min-h-screen">
    <!-- Header Section -->
    <div class="scam-header pt-8">
        <div class="header-overlay"></div>
        <div class="header-content">
            <div class="header-inner">
                <div class="alert-badge">
                    <i class="fas fa-shield-alt mr-2"></i>
                    Scam Alert Details
                </div>
                <h1 class="scam-title">
                    @Model.Title
                </h1>
                <div class="scam-meta">
                    <span class="scam-type">
                        @Model.ScamTypeName
                    </span>
                    <span class="scam-date">
                        <i class="fas fa-calendar-alt mr-2"></i>
                        @Model.CreatedAt.ToString("MMM dd, yyyy")
                    </span>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="main-content">
        <div class="content-container">
            <!-- Quick Stats Cards -->
            <div class="stats-grid">
                <div class="stat-card">
                    <div class="stat-content">
                        <div class="stat-icon bg-green">
                            <i class="fas fa-arrow-up"></i>
                        </div>
                        <div class="stat-info">
                            <p class="stat-number">@Model.Upvotes</p>
                            <p class="stat-label">Helpful</p>
                        </div>
                    </div>
                </div>

                <div class="stat-card">
                    <div class="stat-content">
                        <div class="stat-icon bg-red">
                            <i class="fas fa-arrow-down"></i>
                        </div>
                        <div class="stat-info">
                            <p class="stat-number">@Model.Downvotes</p>
                            <p class="stat-label">Not Helpful</p>
                        </div>
                    </div>
                </div>

                @if (Model.LossAmount.HasValue)
                {
                    <div class="stat-card">
                        <div class="stat-content">
                            <div class="stat-icon bg-yellow">
                                <i class="fas fa-dollar-sign"></i>
                            </div>
                            <div class="stat-info">
                                <p class="stat-number">@Model.LossAmount.Value.ToString("C")</p>
                                <p class="stat-label">@Model.Currency Lost</p>
                            </div>
                        </div>
                    </div>
                }

                <div class="stat-card">
                    <div class="stat-content">
                        <div class="stat-icon @(Model.IsVerified ? "bg-blue" : "bg-gray")">
                            <i class="fas @(Model.IsVerified ? "fa-check-circle" : "fa-clock")"></i>
                        </div>
                        <div class="stat-info">
                            <p class="stat-text">@(Model.IsVerified ? "Verified" : "Pending")</p>
                            <p class="stat-label">Verification</p>
                        </div>
                    </div>
                </div>
            </div>

            <div class="content-grid">
                <!-- Main Content Column -->
                <div class="main-column">
                    <!-- Description Card -->
                    <div class="content-card">
                        <div class="card-header">
                            <div class="header-icon bg-blue">
                                <i class="fas fa-info-circle"></i>
                            </div>
                            <h2 class="card-title">Description</h2>
                        </div>
                        <div class="card-body">
                            <p class="description-text">@Model.Description</p>
                        </div>
                    </div>

                    <!-- Scammer Information Card -->
                    <div class="content-card">
                        <div class="card-header">
                            <div class="header-icon bg-red">
                                <i class="fas fa-user-secret"></i>
                            </div>
                            <h2 class="card-title">Scammer Information</h2>
                        </div>

                        @if (Model.ScammerInfo != null)
                        {
                            <div class="scammer-grid">
                                @if (!string.IsNullOrEmpty(Model.ScammerInfo.Name))
                                {
                                    <div class="scammer-item">
                                        <div class="scammer-item-content">
                                            <i class="fas fa-user scammer-icon"></i>
                                            <div class="scammer-details">
                                                <p class="scammer-label">Name</p>
                                                <p class="scammer-value">@Model.ScammerInfo.Name</p>
                                            </div>
                                        </div>
                                    </div>
                                }

                                @if (!string.IsNullOrEmpty(Model.ScammerInfo.Phone))
                                {
                                    <div class="scammer-item">
                                        <div class="scammer-item-content">
                                            <i class="fas fa-phone scammer-icon"></i>
                                            <div class="scammer-details">
                                                <p class="scammer-label">Phone</p>
                                                <p class="scammer-value font-mono">@Model.ScammerInfo.Phone</p>
                                            </div>
                                        </div>
                                    </div>
                                }

                                @if (!string.IsNullOrEmpty(Model.ScammerInfo.Email))
                                {
                                    <div class="scammer-item">
                                        <div class="scammer-item-content">
                                            <i class="fas fa-envelope scammer-icon"></i>
                                            <div class="scammer-details">
                                                <p class="scammer-label">Email</p>
                                                <p class="scammer-value font-mono text-sm break-all">@Model.ScammerInfo.Email</p>
                                            </div>
                                        </div>
                                    </div>
                                }

                                @if (!string.IsNullOrEmpty(Model.ScammerInfo.WhatsApp))
                                {
                                    <div class="scammer-item">
                                        <div class="scammer-item-content">
                                            <i class="fab fa-whatsapp scammer-icon"></i>
                                            <div class="scammer-details">
                                                <p class="scammer-label">WhatsApp</p>
                                                <p class="scammer-value font-mono">@Model.ScammerInfo.WhatsApp</p>
                                            </div>
                                        </div>
                                    </div>
                                }

                                @if (!string.IsNullOrEmpty(Model.ScammerInfo.Facebook))
                                {
                                    <div class="scammer-item">
                                        <div class="scammer-item-content">
                                            <i class="fab fa-facebook scammer-icon"></i>
                                            <div class="scammer-details">
                                                <p class="scammer-label">Facebook</p>
                                                <p class="scammer-value">@Model.ScammerInfo.Facebook</p>
                                            </div>
                                        </div>
                                    </div>
                                }

                                @if (!string.IsNullOrEmpty(Model.ScammerInfo.Organization))
                                {
                                    <div class="scammer-item">
                                        <div class="scammer-item-content">
                                            <i class="fas fa-building scammer-icon"></i>
                                            <div class="scammer-details">
                                                <p class="scammer-label">Organization</p>
                                                <p class="scammer-value">@Model.ScammerInfo.Organization</p>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="empty-state">
                                <i class="fas fa-info-circle empty-icon"></i>
                                <p class="empty-text">No scammer information available</p>
                            </div>
                        }
                    </div>

                    <!-- Evidence Section -->
                    @if (Model.EvidenceLinks != null && Model.EvidenceLinks.Any())
                    {
                        <div class="content-card">
                            <div class="card-header">
                                <div class="header-icon bg-purple">
                                    <i class="fas fa-images"></i>
                                </div>
                                <h2 class="card-title">Evidence (@Model.EvidenceLinks.Count)</h2>
                            </div>
                            <div class="evidence-grid">
                                @foreach (var link in Model.EvidenceLinks)
                                {
                                    <div class="evidence-item" data-image="@link">
                                        <img src="@link" alt="Evidence" class="evidence-image"
                                             onerror="this.src='/images/placeholder-image.jpg'">
                                        <div class="evidence-overlay">
                                            <button class="evidence-zoom" type="button">
                                                <i class="fas fa-expand-alt"></i>
                                            </button>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="content-card">
                            <div class="card-header">
                                <div class="header-icon bg-gray">
                                    <i class="fas fa-images"></i>
                                </div>
                                <h2 class="card-title">Evidence</h2>
                            </div>
                            <div class="empty-state">
                                <i class="fas fa-camera empty-icon"></i>
                                <p class="empty-text">No evidence available</p>
                            </div>
                        </div>
                    }
                </div>

                <!-- Sidebar -->
                <div class="sidebar-column">
                    <!-- Report Details Card -->
                    <div class="sidebar-card">
                        <h3 class="sidebar-title">
                            <i class="fas fa-clipboard-list sidebar-icon"></i>
                            Report Details
                        </h3>
                        <div class="sidebar-content">
                            @if (!string.IsNullOrEmpty(Model.Location))
                            {
                                <div class="detail-item">
                                    <p class="detail-label">Location</p>
                                    <p class="detail-value">@Model.Location</p>
                                </div>
                            }

                            @if (Model.OccurrenceDate.HasValue)
                            {
                                <div class="detail-item">
                                    <p class="detail-label">Occurrence Date</p>
                                    <p class="detail-value">@Model.OccurrenceDate.Value.ToString("MMM dd, yyyy")</p>
                                </div>
                            }

                            <div class="detail-item">
                                <p class="detail-label">Reported By</p>
                                <p class="detail-value">@Model.ReporterName</p>
                            </div>

                            <div class="detail-item">
                                <p class="detail-label">Report ID</p>
                                <p class="detail-value font-mono">#@Model.ReportID</p>
                            </div>
                        </div>
                    </div>

                    <!-- Vote Section -->
                    <div class="sidebar-card">
                        <h3 class="sidebar-title">
                            <i class="fas fa-vote-yea sidebar-icon"></i>
                            Community Feedback
                        </h3>

                        @if (User.Identity.IsAuthenticated)
                        {
                            <div class="vote-section">
                                <form asp-action="Upvote" asp-route-reportId="@Model.ReportID" method="post" class="vote-form">
                                    <button type="submit" class="vote-btn @(Model.UserVote == "up" ? "vote-btn-active" : "vote-btn-inactive")">
                                        <i class="fas fa-arrow-up mr-2"></i>
                                        Helpful (@Model.Upvotes)
                                    </button>
                                </form>

                                <form asp-action="Downvote" asp-route-reportId="@Model.ReportID" method="post" class="vote-form">
                                    <button type="submit" class="vote-btn @(Model.UserVote == "down" ? "vote-btn-active vote-btn-down" : "vote-btn-inactive")">
                                        <i class="fas fa-arrow-down mr-2"></i>
                                        Not Helpful (@Model.Downvotes)
                                    </button>
                                </form>
                            </div>
                        }
                        else
                        {
                            <div class="vote-section">
                                <div class="vote-disabled">
                                    <span class="vote-disabled-text">
                                        <i class="fas fa-arrow-up mr-2"></i>
                                        Helpful
                                    </span>
                                    <span class="vote-count">@Model.Upvotes</span>
                                </div>
                                <div class="vote-disabled">
                                    <span class="vote-disabled-text">
                                        <i class="fas fa-arrow-down mr-2"></i>
                                        Not Helpful
                                    </span>
                                    <span class="vote-count">@Model.Downvotes</span>
                                </div>
                                <p class="vote-login-text">
                                    <a asp-controller="Account" asp-action="Login" class="login-link">Sign in</a> to vote
                                </p>
                            </div>
                        }
                    </div>
                    <!-- Verification Section (for superusers) -->
                    @if (Model.CanVerify)
                    {
                        <div class="verification-section mb-6">
                            <div class="rounded-lg bg-white p-4 shadow-md dark:bg-gray-800">
                                <h3 class="mb-2 text-lg font-semibold text-gray-800 dark:text-gray-100">
                                    <i class="fas fa-shield-check mr-2 text-blue-500"></i>
                                    Superuser Verification
                                </h3>

                                @if (Model.IsVerified)
                                {
                                    <div class="flex items-center justify-between">
                                        <div>
                                            <span class="inline-flex items-center rounded-full bg-green-100 px-3 py-1 text-sm font-medium text-green-800 dark:bg-green-900 dark:text-green-200">
                                                <i class="fas fa-check-circle mr-1"></i>
                                                Verified Report
                                            </span>
                                            @if (!string.IsNullOrEmpty(Model.VerifiedByName))
                                            {
                                                <p class="mt-1 text-sm text-gray-600 dark:text-gray-400">
                                                    Verified by: @Model.VerifiedByName
                                                    @if (Model.VerifiedAt.HasValue)
                                                    {
                                                        <span>on @Model.VerifiedAt.Value.ToString("MMM dd, yyyy")</span>
                                                    }
                                                </p>
                                            }
                                        </div>
                                        <form asp-action="UnverifyReport" asp-route-reportId="@Model.ReportID" method="post" class="inline-flex">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="inline-flex items-center rounded-md border border-transparent bg-red-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-red-700 focus:ring-2 focus:ring-red-500 focus:ring-offset-2 focus:outline-none">
                                                <i class="fas fa-times mr-2"></i>
                                                Unverify
                                            </button>
                                        </form>
                                    </div>
                                }
                                else
                                {
                                    <div class="flex items-center justify-between">
                                        <span class="inline-flex items-center rounded-full bg-yellow-100 px-3 py-1 text-sm font-medium text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200">
                                            <i class="fas fa-clock mr-1"></i>
                                            Pending Verification
                                        </span>
                                        <form asp-action="VerifyReport" asp-route-reportId="@Model.ReportID" method="post" class="inline-flex">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="inline-flex items-center rounded-md border border-transparent bg-green-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-green-700 focus:ring-2 focus:ring-green-500 focus:ring-offset-2 focus:outline-none">
                                                <i class="fas fa-check-circle mr-2"></i>
                                                Verify Report
                                            </button>
                                        </form>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                    else if (Model.IsVerified)
                    {
                        <div class="verification-badge mb-6">
                            <div class="rounded-lg border border-green-200 bg-green-50 p-3 dark:border-green-700 dark:bg-green-900">
                                <div class="flex items-center">
                                    <i class="fas fa-shield-check mr-2 text-green-500"></i>
                                    <span class="font-medium text-green-800 dark:text-green-200">Verified Report</span>
                                    @if (!string.IsNullOrEmpty(Model.VerifiedByName))
                                    {
                                        <span class="ml-2 text-sm text-green-600 dark:text-green-300">
                                            (by @Model.VerifiedByName)
                                        </span>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                    <!-- Action Buttons -->
                    <div class="action-buttons">
                        <a href="@Url.Action("ScamList", "Account")" class="action-btn action-btn-primary">
                            <i class="fas fa-arrow-left mr-2"></i>
                            Back to Scam List
                        </a>

                        <button class="action-btn action-btn-danger" id="reportIssueBtn">
                            <i class="fas fa-flag mr-2"></i>
                            Report Issue
                        </button>

                        <button class="action-btn action-btn-secondary" id="shareAlertBtn">
                            <i class="fas fa-share-alt mr-2"></i>
                            Share Alert
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="animate-fade-in-up mx-auto w-full max-w-4xl pb-8">
            <div class="rounded-xl border border-gray-200 bg-white p-8 shadow-2xl dark:border-gray-700 dark:bg-gray-800">
                <div class="mb-6 flex items-center space-x-3">
                    <div class="flex h-10 w-10 flex-shrink-0 items-center justify-center rounded-full bg-green-600 text-white dark:bg-green-500">
                        <i class="fas fa-comments"></i>
                    </div>
                    <h2 class="text-2xl font-semibold text-gray-800 dark:text-gray-100">
                        Community Comments
                        @if (Model.Comments.Any())
                        {
                            <span class="text-sm font-normal text-gray-500 dark:text-gray-400">(@Model.Comments.Count)</span>
                        }
                    </h2>
                </div>

                <div class="space-y-6">
                    <!-- Comment Form (only for authenticated users without existing comment) -->
                    @if (User.Identity.IsAuthenticated && Model.UserComment == null)
                    {
                        <div class="animate-fade-in-up rounded-xl bg-gray-50 p-6 dark:bg-gray-700" style="animation-delay: 0.1s;">
                            <form asp-action="AddComment" method="post" class="space-y-4">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="ReportID" value="@Model.ReportID" />

                                <div>
                                    <label for="CommentText" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Add your comment</label>
                                    <textarea name="CommentText" class="mt-1 block w-full resize-y rounded-lg border border-gray-300 px-4 py-3 text-sm text-gray-900 transition-all duration-300 outline-none focus:border-red-500 focus:ring-4 focus:ring-red-100 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 dark:focus:border-red-400 dark:focus:ring-red-900" rows="4" placeholder="Share your thoughts or additional information about this scam..." maxlength="1000" required></textarea>
                                    <div class="mt-1 text-right text-sm text-gray-500 dark:text-gray-400">
                                        <span class="char-count">0</span>/1000 characters
                                    </div>
                                </div>

                                <button type="submit" class="inline-flex items-center justify-center rounded-full bg-red-600 px-6 py-3 text-sm font-semibold text-white shadow-md transition-all duration-300 hover:scale-105 hover:bg-red-700 focus:ring-4 focus:ring-red-200 focus:outline-none dark:bg-red-500 dark:hover:bg-red-600 dark:focus:ring-red-800">
                                    <i class="fas fa-paper-plane mr-2"></i>
                                    Post Comment
                                </button>
                            </form>
                        </div>
                    }
                    else if (!User.Identity.IsAuthenticated)
                    {
                        <div class="animate-fade-in-up rounded-xl bg-gray-50 p-6 text-center dark:bg-gray-700" style="animation-delay: 0.1s;">
                            <p class="text-gray-600 dark:text-gray-300">
                                <a asp-controller="Account" asp-action="Login" class="text-red-600 hover:text-red-700 hover:underline dark:text-red-400 dark:hover:text-red-300">Sign in</a> to leave a comment
                            </p>
                        </div>
                    }

                    <!-- Comments List -->
                <div class="items-center justify-center space-y-6">
                        @if (Model.Comments.Any())
                        {
                            foreach (var comment in Model.Comments)
                            {
                                <div class="animate-fade-in-up border-b border-gray-200 pb-6 dark:border-gray-700" data-comment-id="@comment.CommentID" style="animation-delay: 0.2s;">
                                    <div class="mb-2 flex items-center justify-between">
                                        <div class="flex items-center space-x-3">
                                            <i class="fas fa-user-circle text-2xl text-gray-400 dark:text-gray-500"></i>
                                            <div>
                                                <span class="font-medium text-gray-800 dark:text-gray-100">@comment.UserName</span>
                                                @if (comment.IsEdited)
                                                {
                                                    <span class="ml-2 text-xs text-gray-500 dark:text-gray-400">(edited)</span>
                                                }
                                            </div>
                                        </div>
                                        <div class="text-sm text-gray-500 dark:text-gray-400">
                                            @comment.CreatedAt.ToString("MMM dd, yyyy 'at' hh:mm tt")
                                        </div>
                                    </div>

                                    <div class="ml-10">
                                        <p class="text-gray-700 dark:text-gray-300">@comment.CommentText</p>

                                        <!-- Edit/Delete buttons (only for comment owner) -->
                                        @if (User.Identity.IsAuthenticated && Model.UserComment?.CommentID == comment.CommentID)
                                        {
                                            <div class="mt-3 flex space-x-2">
                                                <button class="comment-edit-btn flex items-center text-sm font-semibold text-red-600 hover:text-red-700 dark:text-red-400 dark:hover:text-red-300" data-comment-id="@comment.CommentID">
                                                    <i class="fas fa-edit mr-1"></i>Edit
                                                </button>
                                                <form asp-action="DeleteComment" method="post" class="inline-flex">
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" name="commentId" value="@comment.CommentID" />
                                                    <button type="submit" class="flex items-center text-sm font-semibold text-red-600 hover:text-red-700 dark:text-red-400 dark:hover:text-red-300" onclick="return confirm('Are you sure you want to delete your comment?')">
                                                        <i class="fas fa-trash mr-1"></i>Delete
                                                    </button>
                                                </form>
                                            </div>

                                            <!-- Edit Form (hidden by default) -->
                                            <div class="comment-edit-form mt-4 hidden" id="edit-form-@comment.CommentID">
                                                <form asp-action="EditComment" method="post" class="space-y-4">
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" name="commentId" value="@comment.CommentID" />

                                                    <textarea name="commentText" class="mt-1 block w-full resize-y rounded-lg border border-gray-300 px-4 py-3 text-sm text-gray-900 transition-all duration-300 outline-none focus:border-red-500 focus:ring-4 focus:ring-red-100 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 dark:focus:border-red-400 dark:focus:ring-red-900" rows="4" maxlength="1000" required>@comment.CommentText</textarea>
                                                    <div class="text-right text-sm text-gray-500 dark:text-gray-400">
                                                        <span class="edit-char-count">@comment.CommentText.Length</span>/1000 characters
                                                    </div>

                                                    <div class="flex space-x-2">
                                                        <button type="submit" class="inline-flex items-center justify-center rounded-full bg-red-600 px-6 py-2 text-sm font-semibold text-white shadow-md transition-all duration-300 hover:scale-105 hover:bg-red-700 focus:ring-4 focus:ring-red-200 focus:outline-none dark:bg-red-500 dark:hover:bg-red-600 dark:focus:ring-red-800">
                                                            <i class="fas fa-save mr-2"></i>Save
                                                        </button>
                                                        <button type="button" class="cancel-edit-btn inline-flex items-center justify-center rounded-full bg-gray-200 px-6 py-2 text-sm font-semibold text-gray-700 transition-all duration-300 hover:bg-gray-300 focus:ring-4 focus:ring-gray-200 focus:outline-none dark:bg-gray-600 dark:text-gray-300 dark:hover:bg-gray-500 dark:focus:ring-gray-700" data-comment-id="@comment.CommentID">
                                                            <i class="fas fa-times mr-2"></i>Cancel
                                                        </button>
                                                    </div>
                                                </form>
                                            </div>
                                        }
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="py-8 text-center">
                                <i class="fas fa-comments mb-2 text-3xl text-gray-400 dark:text-gray-500"></i>
                                <p class="text-gray-600 dark:text-gray-300">No comments yet. Be the first to comment!</p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    
</div>

<!-- Image Modal -->
<div id="imageModal" class="image-modal">
    <div class="modal-content">
        <button class="modal-close" id="modalClose">&times;</button>
        <img id="modalImage" src="" alt="Evidence" class="modal-image">
        <div class="modal-nav">
            <button class="nav-btn" id="prevImage">❮</button>
            <span id="imageCounter" class="image-counter"></span>
            <button class="nav-btn" id="nextImage">❯</button>
        </div>
    </div>
</div>



@section Scripts {
    <script src="/js/ScamDetails.js" asp-append-version="true"></script>
}