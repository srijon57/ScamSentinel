@model ScamSentinel.Models.Scam.UserPostsViewModel

@{
    ViewData["Title"] = "My Scam Reports";
}

<div class="flex min-h-screen items-center justify-center bg-gradient-to-br from-red-50 via-red-100 to-red-200 px-4 py-14 dark:from-gray-900 dark:via-gray-800 dark:to-red-900">
    <div class="animate-fade-in-up w-full max-w-7xl">
        <h2 class="animate-bounce-slow mb-8 text-center text-2xl font-bold text-gray-800 sm:text-3xl dark:text-gray-100">
            My Scam Reports
        </h2>

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="animate-fade-in-up mb-6 rounded-xl bg-green-100 p-4 text-green-700 dark:bg-green-900 dark:text-green-300" style="animation-delay: 0.1s;">
                @TempData["SuccessMessage"]
            </div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="animate-fade-in-up mb-6 rounded-xl bg-red-100 p-4 text-red-700 dark:bg-red-900 dark:text-red-300" style="animation-delay: 0.1s;">
                @TempData["ErrorMessage"]
            </div>
        }

        @if (!Model.ScamReports.Any())
        {
            <div class="animate-fade-in-up rounded-xl border border-gray-200 bg-white p-6 shadow-lg dark:border-gray-700 dark:bg-gray-800" style="animation-delay: 0.2s;">
                <p class="text-center text-gray-600 dark:text-gray-300">You haven't submitted any scam reports yet.</p>
                <div class="mt-4 flex justify-center">
                    <a href="@Url.Action("PostScam", "Account")"
                       class="inline-flex justify-center rounded-full bg-red-600 px-8 py-3 text-base font-semibold text-white shadow-md transition-all duration-300 hover:scale-105 hover:bg-red-700 hover:shadow-lg focus:ring-4 focus:ring-red-200 focus:outline-none dark:bg-red-500 dark:hover:bg-red-600 dark:focus:ring-red-800">
                        Submit Your First Report
                    </a>
                </div>
            </div>
        }
        else
        {
            <div class="animate-fade-in-up rounded-xl border border-gray-200 bg-white shadow-lg dark:border-gray-700 dark:bg-gray-800" style="animation-delay: 0.2s;">
                <div class="table-responsive p-6">
                    <table class="w-full table-auto text-left">
                        <thead>
                            <tr class="border-b border-gray-200 dark:border-gray-700">
                                <th class="px-4 py-3 text-sm font-medium text-gray-700 dark:text-gray-300">Title</th>
                                <th class="px-4 py-3 text-sm font-medium text-gray-700 dark:text-gray-300">Type</th>
                                <th class="px-4 py-3 text-sm font-medium text-gray-700 dark:text-gray-300">Date Posted</th>
                                <th class="px-4 py-3 text-sm font-medium text-gray-700 dark:text-gray-300">Upvotes</th>
                                <th class="px-4 py-3 text-sm font-medium text-gray-700 dark:text-gray-300">Downvotes</th>
                                <th class="px-4 py-3 text-sm font-medium text-gray-700 dark:text-gray-300">Verification</th>
                                <th class="px-4 py-3 text-sm font-medium text-gray-700 dark:text-gray-300">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var report in Model.ScamReports)
                            {
                                <tr class="border-b border-gray-200 dark:border-gray-700">
                                    <td class="px-4 py-3">
                                        <a href="@Url.Action("ScamDetails", "Account", new { id = report.ReportID })"
                                           class="text-sm font-medium text-red-600 hover:text-red-700 dark:text-red-400 dark:hover:text-red-300">
                                            @report.Title
                                        </a>
                                    </td>
                                    <td class="px-4 py-3 text-sm text-gray-600 dark:text-gray-300">@report.ScamTypeName</td>
                                    <td class="px-4 py-3 text-sm text-gray-600 dark:text-gray-300">@report.CreatedAt.ToString("MMM dd, yyyy")</td>
                                    <td class="px-4 py-3 text-sm text-gray-600 dark:text-gray-300">@report.Upvotes</td>
                                    <td class="px-4 py-3 text-sm text-gray-600 dark:text-gray-300">@report.Downvotes</td>
                                    <td class="px-4 py-3">
                                        @if (report.IsVerified)
                                        {
                                            <span class="inline-flex rounded-full bg-green-100 px-3 py-1 text-xs font-semibold text-green-700 dark:bg-green-900 dark:text-green-300">Verified</span>
                                        }
                                        else
                                        {
                                            <span class="inline-flex rounded-full bg-yellow-100 px-3 py-1 text-xs font-semibold text-yellow-700 dark:bg-yellow-900 dark:text-yellow-300">Pending</span>
                                        }
                                    </td>
                                    <td class="flex space-x-2 px-4 py-3">
                                        <a href="@Url.Action("ScamDetails", "Account", new { id = report.ReportID })"
                                           class="inline-flex justify-center rounded-full border border-red-600 px-4 py-2 text-sm font-semibold text-red-600 transition-all duration-300 hover:bg-red-50 hover:text-red-700 focus:ring-4 focus:ring-red-200 focus:outline-none dark:border-red-400 dark:text-red-400 dark:hover:bg-gray-700 dark:hover:text-red-300 dark:focus:ring-red-800">
                                            View
                                        </a>
                                        <form method="post"
                                              action="@Url.Action("DeletePost", "Account")"
                                              class="d-inline"
                                              onsubmit="return confirm('Are you sure you want to delete this post? This action cannot be undone.');">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="reportId" value="@report.ReportID" />
                                            <button type="submit"
                                                    class="inline-flex justify-center rounded-full border border-red-600 px-4 py-2 text-sm font-semibold text-red-600 transition-all duration-300 hover:bg-red-50 hover:text-red-700 focus:ring-4 focus:ring-red-200 focus:outline-none dark:border-red-400 dark:text-red-400 dark:hover:bg-gray-700 dark:hover:text-red-300 dark:focus:ring-red-800">
                                                Delete
                                            </button>
                                        </form>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Pagination -->
                @if (Model.TotalPages > 1)
                {
                    <nav aria-label="Page navigation" class="p-6">
                        <ul class="flex justify-center space-x-2">
                            @for (int i = 1; i <= Model.TotalPages; i++)
                            {
                                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                    <a class="inline-flex items-center justify-center rounded-full px-4 py-2 text-sm font-semibold transition-all duration-300 @(i == Model.CurrentPage ? "bg-red-600 text-white" : "bg-gray-100 text-gray-700 hover:bg-gray-200 dark:bg-gray-700 dark:text-gray-300 dark:hover:bg-gray-600")"
                                       href="@Url.Action("MyPosts", new { page = i })">@i</a>
                                </li>
                            }
                        </ul>
                    </nav>
                }
            </div>
        }
    </div>
</div>